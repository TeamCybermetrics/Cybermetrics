name: Backend CI/CD

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'server/**'
      - '.github/workflows/backend-ci.yml'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'server/**'

jobs:
  test:
    runs-on: ubuntu-latest
    
    defaults:
      run:
        working-directory: ./server
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
        cache: 'pip'
        cache-dependency-path: server/requirements.txt
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Create Firebase credentials file
      run: |
        echo '${{ secrets.FIREBASE_CREDENTIALS }}' > serviceAccountKey.json
    
    - name: Create .env file
      run: |
        cat << EOF > .env
        FIREBASE_CREDENTIALS_PATH=./serviceAccountKey.json
        FIREBASE_WEB_API_KEY=${{ secrets.FIREBASE_WEB_API_KEY }}
        ENVIRONMENT=testing
        HOST=0.0.0.0
        PORT=8000
        EOF
    
    - name: Run linter (if you have one)
      run: |
        # Uncomment when you add a linter
        # pip install flake8
        # flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
      continue-on-error: true
    
    - name: Run tests (if you have them)
      run: |
        # Uncomment when you add tests
        # pip install pytest pytest-asyncio
        # pytest tests/
      continue-on-error: true
    
    - name: Start server (health check)
      run: |
        python main.py &
        sleep 10
        curl -f http://localhost:8000/api/health || exit 1
      env:
        FIREBASE_WEB_API_KEY: ${{ secrets.FIREBASE_WEB_API_KEY }}
    
    - name: Clean up credentials
      if: always()
      run: |
        rm -f serviceAccountKey.json
        rm -f .env

  # Uncomment when you're ready to deploy
  # deploy:
  #   needs: test
  #   runs-on: ubuntu-latest
  #   if: github.ref == 'refs/heads/main' && github.event_name == 'push'
  #   
  #   steps:
  #   - name: Deploy to production
  #     run: |
  #       echo "Add your deployment steps here"
  #       # e.g., deploy to AWS, Google Cloud, Heroku, etc.
