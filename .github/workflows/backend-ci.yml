name: Backend CI

on:
  # Always run on PRs/pushes to main/develop (no paths filter here)
  pull_request:
    branches: [ main, develop ]
  push:
    branches: [ main, develop ]

jobs:
  backend-ci:
    name: Backend - Install, Build & Run
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # Detect whether server/** changed in this PR/push
      - name: Detect changes
        id: changes
        uses: dorny/paths-filter@v3
        with:
          filters: |
            server:
              - 'server/**'

      # If server/** didn't change, exit successfully so the required check goes green
      - name: No server changes ‚Äî skip backend steps
        if: steps.changes.outputs.server != 'true'
        run: |
          echo "No changes in server/**. Skipping backend CI."
          exit 0

      # Real backend work only when server/** changed
      - name: Setup Python
        if: steps.changes.outputs.server == 'true'
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
          cache-dependency-path: server/requirements.txt

      - name: Install dependencies
        if: steps.changes.outputs.server == 'true'
        working-directory: ./server
        run: |
          echo "üì¶ Installing dependencies..."
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          echo "‚úÖ Installation successful"

      - name: Create Firebase credentials file
        if: steps.changes.outputs.server == 'true'
        working-directory: ./server
        run: |
          echo "üîê Setting up Firebase credentials..."
          echo '${{ secrets.FIREBASE_CREDENTIALS }}' > serviceAccountKey.json
          echo "‚úÖ Credentials file created"

      - name: Verify imports
        if: steps.changes.outputs.server == 'true'
        working-directory: ./server
        run: |
          echo "üîç Verifying all imports..."
          python -c "import fastapi; print('‚úì FastAPI')"
          python -c "import firebase_admin; print('‚úì Firebase Admin')"
          python -c "import uvicorn; print('‚úì Uvicorn')"
          python -c "from pybaseball import batting_stats; print('‚úì Pybaseball')"
          python -c "from rapidfuzz import fuzz; print('‚úì RapidFuzz')"
          echo "‚úÖ All imports successful"

      - name: Test app startup
        if: steps.changes.outputs.server == 'true'
        working-directory: ./server
        run: |
          echo "üöÄ Testing if app can start..."
          timeout 10s uvicorn main:app --host 0.0.0.0 --port 8000 &
          sleep 5
          curl -f http://localhost:8000/health || echo "Health check endpoint not responding (this may be expected)"
          echo "‚úÖ App startup test completed"
        continue-on-error: true

      - name: Cleanup credentials
        if: always()
        working-directory: ./server
        run: rm -f serviceAccountKey.json

      - name: Summary
        if: success()
        run: |
          echo "=================================="
          echo "‚úÖ Backend CI Passed"
          echo "=================================="
          echo "All backend checks completed successfully!"